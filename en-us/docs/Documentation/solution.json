{
  "filename": "solution.md",
  "__html": "<h1 id=\"duvisor%E2%80%99s-solution\">DuVisor’s Solution <a class=\"header-anchor\" href=\"#duvisor%E2%80%99s-solution\">#</a></h1>\n<p>We built a user-level hypervisor called DuVisor to address the flaws mentioned in <a href=\"./motivation.md\">Motivation</a>).</p>\n<h2 id=\"stronger-security\">Stronger Security <a class=\"header-anchor\" href=\"#stronger-security\">#</a></h2>\n<p>DuVisor deprivileges most functionalities of hypervisor to the user space so that the kernel’s attack surface introduced by virtualization can be eliminated. The one-to-one service model further enhances the isolation between VMs and the fault tolerance of the entire system. Such isolation model (as shown in Figure-1) not only protects the host kernel, but also improves the isolation of VMs for the non-shared hypervisor.\n<img src=\"../img/isolation.png\" alt=\"alt Strong isolation model of DuVisor\" title=\"1\">\n<font face=\"黑体\"><center>Figure-1 Strong isolation model of DuVisor</center></font></p>\n<h2 id=\"near-native-performance\">Near-native Performance <a class=\"header-anchor\" href=\"#near-native-performance\">#</a></h2>\n<p>Because of the direct VM exit handling in user space as shown in Figure-2, DuVisor gets rid of the redundant mode switching to completely unleash the potential performance of virtualization. Its all-in-one design further enhances the cooperation between modules to make the code more efficient.\n<img src=\"../img/performance.png\" alt=\"alt Direct VM exit handling in user space\">\n<font face=\"黑体\"><center>Figure-2 Direct VM exit handling in user space</center></font></p>\n<h2 id=\"better-operations-and-maintenance\">Better Operations and Maintenance <a class=\"header-anchor\" href=\"#better-operations-and-maintenance\">#</a></h2>\n<p>As shown in Figure-3, benefit from the thriving software environment in user space, DuVisor is developed in the memory-safe language Rust. With the rich libraries and testing framework provided by Rust, this project can be developed in an efficient and high-quality way. Each upgrade of DuVisor can be completed without host reboots. Stronger fault tolerance also leads to more stable cloud services and better management.\n<img src=\"../img/better.png\" alt=\"alt Better O&amp;M\">\n<font face=\"黑体\"><center>Figure-3 Better O&amp;M</center></font></p>\n",
  "link": "/en-us/docs/Documentation/solution.html",
  "meta": {
    "layout": "clean",
    "title": "Solution",
    "date": "2022-04-06 17:50:00",
    "categories": "main"
  }
}